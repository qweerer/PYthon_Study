
# colors

red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
reset='\033[0m'

reset='\033[0m'
green='\033[1;32m'
red='\033[1;31m'
blue='\e[36m'
gold='\e[93m'
\e[33m
pink='\e[35m'
grey-bg='\e[100m'
pink-bg='\e[39m\e[45m'

exitstatus() {
    if [ "$?" = 0 ]
    then
        printf "${green}√${reset}"
    else
        printf "${red}×${reset}"
    fi
}

#======git
function git_branch {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return;
    echo "("${ref#refs/heads/}") ";
}

function parse_git_dirty {
    local git_status=$(git status 2> /dev/null | tail -n1) || $(git status 2> /dev/null | head -n 2 | tail -n1);
    if [[ "$git_status" != "" ]]; then
        local git_now; # 标示
        if [[ "$git_status" =~ nothing\ to\ commit || "$git_status" =~  Your\ branch\ is\ up\-to\-date\ with ]]; then
            git_now="=";
        elif [[ "$git_status" =~ Changes\ not\ staged || "$git_status" =~ no\ changes\ added ]]; then
            git_now='~';
        elif [[ "$git_status" =~ Changes\ to\ be\ committed ]]; then #Changes to be committed
            git_now='*';
        elif [[ "$git_status" =~ Untracked\ files ]]; then
            git_now="+";
        elif [[ "$git_status" =~ Your\ branch\ is\ ahead ]]; then
            git_now="#";
        fi
        echo "${git_now}";
    fi
}
#======git-end

# export PS1='[\u@\h \A] \[\033[1;36m\] [\$]\[\033[0m\] [] \w \n\[\033[0;33m\]In[\#]:= \[\033[0m\]'
# export PS1='[\u@MSYS \A] \[\033[1;31m\] [\$]\[\033[0m\] [] \w \n\[\033[0;33m\]In[\#]:= \[\033[0m\]'
# export PS1='\n    \n[\033[1;35m\u@MSYS\e[0m \A] \033[1;32m[\$]\e[0m [`exitstatus`] \033[1;93m\w\e[0m  \n\[\033[0;33m\]In[\#]:= \[\033[0m\]'
# export PS1='\n[\[\e[35m\]\u@\h\[\e[0m\] \A] [`exitstatus`] \[\e[93m\]\w\[\e[0m\]     \n\[\e[33m\]In[\$]\[\e[0m\]:'
#export PS0='\n\e[100m#==========[out]==========#\[\e]0;\w\a\]\n'

export PS0="\n${grey_bg}#==========[out]==========#${reset}\n"
export PS2='In[=]>:'

#=======全部
export PS1='\[\e]0;\w\a\]\n[\[\e[35m\]\u@\h${reset} \A] [`exitstatus`] \[\e[93m\]\w${reset} \[\e[36m\](`git_branch`)${reset} \[\e[31m\]`parse_git_dirty`${reset}     \n\[\e[33m\]In[\$]=${reset}:'
#=======一般
export PS1='\[\e]0;\w\a\]\n['${pink}'\u@\h'${reset}' \A] [`exitstatus`] '${gold}'\w'${reset}'     \n'${gold}'In[\$]=${reset}:'

#========root
export PS1='\[\e]0;\w\a\]\n[\[\e[39m\]\[\e[45m\]\u@\h${reset} \D{%b-%d}-\A] [`exitstatus`] \[\e[93m\]\w${reset}    \n\[\e[33m\]In[\$]=${reset}:'

#=======MSYS
export PS1='\[\e]0;\w\a\]\n[\[\e[35m\]\u@MSYS\[\e[0m\] \A] [`exitstatus`] \[\e[93m\]\w\[\e[0m\] \[\e[36m\]`git_branch`\[\e[0m\] \[\e[31m\]`parse_git_dirty`\[\e[0m\]     \n\[\e[33m\]In[\$]=\[\e[0m\]:'

export PS1='\[\e]0;\w\a\]\n['${pink_bg}'\u@MSYS'${reset}' \A] [`exitstatus`] '${gold}'\w'${reset}' '${blue}'`git_branch`'${reset}' '${red}'`parse_git_dirty`'${reset}'     \n'${gold}'In[\$]='${reset}'\[\e[0m\]:'

export PATH=$PATH:/c/Develop/nodejs
export PATH=$PATH:/c/Develop/nodejs/node-global

echo "111" >> /home/1.txt
# /c/Develop/1-www-data/env_app.sh